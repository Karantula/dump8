pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
--tryck_v0.2
--by karantula

function _init()

	game_level_street=0

 init_debugger()
 
 init_camera()
 init_truck()
 init_player()
	init_objects()


	moving = false
	
	countdown = 10 --spawn timer for items
	
	
 speed = 1 --!todo! changing speed breaks the map
 
 vx=0 --velocity
 thrust=0
 
 gear=0
 
 clockrt=0 --todo
 clockrl=0
end

function _update()
 
 move_player() 
 controls()
 update_map()
 
 --gear shifting, ugly conditionals
 if (moving) then 
  
  --accelerate/decelerate based on what gear
  --added 0.1 tollerance
  if (vx+0.1<gear) then
   thrust = 0.1
  elseif (vx>gear) then
   thrust = -0.1
  else  
   thrust=0
   vx=flr(vx+0.1)
  end
  
  countdown-=1
  
  mx=x1+10
  my=y1
 
  --sfx(0) 
  vx+=thrust
  
  if gear<1 and gear>0 then gear=0 end
  
 end
 
 --when slowing down, stop at 0 and reset thrust
 if (vx<=0) then
  moving=false
  vx = 0.0
  thrust=0.1
 end
 
 if (countdown <1) then
  countdown = 20
 end
 
 if (countdown == 1) then
  --add_new_item(x0+120,rnd(40)+70,rnd(4)+32)
 end
 
 
 for i in all(items) do
  i:update()
 end
 for a in all(args) do
  a:update()
 end
 for o in all(outlines) do
  o:update()
 end
 
 --if clockrt>10 then game_level_street=2
 --elseif clockrt>5 then game_level_street=1 end
 --if clockrt>10 then game_level_street=0 end
 
 --realtime clock! use to measure stuff
 clockrt+=1/30
 clockrl+=abs(vx/sqrt(1-(vx*vx/299792485*299792485)))
--**__⌂debugger⌂__**--
 --uncomment (and swap arg)
 add_new_arg(vx, c0+10, 10,7)
 add_new_arg(mx, c0+10, 30,8)
 add_new_arg(c0, c0+10, 50,9)
 add_new_outline(doorx0,doory0,doorx1,doory1,11)
 add_new_outline(mx,my,mx+mw,my+mh,10)
 add_new_outline(trx,try,trx+trw,try+trh,13)
end

function _draw()
 cls()
 draw_map()
 --camera(c0,c1)
 
 for i in all(items) do
  i:draw()
 end
 
 for a in all(args) do
  a:draw()
 end
 
 --draw last to appear on top
 draw_truck(x0,x1,y0,y1)
 
 if vx == 0 then
  draw_player(mx,my,msp)
 end
 --fun! only display while holdiong ❎
 if (btn(❎)) then
 	for o in all(outlines) do
  	o:draw()
 	end 
 end
end

function box_hit(
 x1,y1,w1,h1,
 x2,y2,w2,h2)
 
 local hit=false
 
 local xd=abs((x1+(w1/2))-(x2+(w2/2)))
 local xs=w1/2+w2/2
 local yd=abs((y1+(h1/2))-(y2+(h2/2)))
 local ys=h1/2+h2/2
  
 if xd<xs and 
    yd<ys then
  hit=true
 end
 
 return hit
end 

function collider(
 _dx0,_dy0,_dx1,_dy1,
 _px,_py)
 
 dx0 = _dx0
 dy0 = _dy0
 dx1 = _dx1
 dy1 = _dy1
 px = _px
 py = _py
 
 
 collision = false
 
 if px>dx0
 and px<dx1
 and py>dy0 
 and py<dy1
  then collision = true end
 
 return collision
end




-->8
--truck

function init_truck()
	--truck coords
	x0=10 
	x1=50
	y0=70
	y1=90
	
	whsp=2 --wheel sprite counter
	whspc=1 --sprite counter 
	
	--door collider coords
 doorx0 = x0+40
 doory0 = y0+15
 doorx1 = x1+15
 doory1 = y1+10
 
 --truck collider coords
 trx = x0
 try = y0-2
 trx1 = x1+16
 try1 = y1-1
 
 trw = 56
 trh = 20
end

function draw_truck(_x0,_x1,_y0,_y1)
 
 x0=_x0
 x1=_x1
 y0=_y0
 y1=_y1
 
 rectfill(x0,y0,x1,y1,7) -- box
 rect(x0,y0,x1,y1,4) -- box outline
 circfill(x0+20,y0+10,7,9) -- sign circle
 line(x0+12,y0+11,x0+20,y0+11,0) -- white line txt sign
 line(x0+18,y0+9,x0+26,y0+9,7) -- black line txt sign
 
 spr(6,x1+1,y0+4,2,2) -- cabin

 line(x1+1,y0+3,x1+10,y0+3,7) --cabin top white line
 line(x1+1,y0+2,x1+9,y0+2,4) --cabin top orange line
 pset(x1+10,y0+3,4) -- orange dot on white line
 
 spr(whsp,x0+2,y1-2) -- back wheel
 spr(whsp,x0+40,y1-2) -- front wheel
 
 pset(x0-1,y0-1,4) -- top left pixel 
 pset(x1-1,y0-1,4) -- top right pixel
 pset(x0-1,y1-1,4) -- bottom left pixel
 line(x0-2,y0-2,x1-2,y0-2,4) -- top of the truck
 line(x0-2,y1-2,x0-2,y0-2,4) -- back of the truck
 line(x0,y0-1,x1-2,y0-1,7) -- top white fill
 line(x0-1,y0,x0-1,y1-2,7) -- back white fill
 line(x1-2,y1+1,x1-4,y1+1,13) -- far wheel
 line(x0,y1+1,x0+2,y1+1,13) -- another far wheel

 --wheels spinnin
 if vx<1.5 then
  whsp+=vx
 else 
  whsp+=whspc*1.1
 end
 if (whsp > 4) then 
  whsp = 1
 end
 
 --can't move vertically beyond bounds
  if (y0<50) then 
  	y0 = 50
  	y1 = 70 
  end
  if (y0>98) then 
  	y0 = 98
  	y1 = 118 
  end
  --same for collider
  if (doory0<65) then 
  	doory0 = 65
  	doory1 = 80 
  end
  if (doory0>112) then 
  	doory0 = 112
  	doory1 = 128 
  end
end




-->8
--camera & map

function init_camera()
 c0=0 --camera x coord
 cx=50 --camera...offset??
	map_x=0
	map_collumn=0
	map_row=0
end

function update_map()
 if (moving) then 
  --c0+=vx
  map_x-=vx
 end
 
 if game_level_street == 1 then
  map_row=16
 elseif game_level_street == 0 then
  map_row=0
  elseif game_level_street == 2 then
  map_row=0
  map_collumn=32
 end 
 if map_x < -255 then map_x=0 end
end


function draw_map()
		map(map_collumn,map_row,map_x-50,0,64,16)
		map(map_collumn,map_row,map_x+206,0,64,16)
end

-->8
--objects

function init_objects()
 --delcare objects
 items={}
end

function add_new_item(_x,_y,_sp)
 add(items,{
  x=_x,
  y=_y,
  sp=_sp,
  life=120,
  draw=function(self)
   spr(self.sp,self.x,self.y)
  end,
  update=function(self)
   self.life-=1
   if (self.life<0) then
    del(items,self)
   end
   if (moving) then self.x-=vx end
  end
 })
end
-->8
--player

function init_player()
 mx = x1+10 --player coords
	my = y1
	
	mw=8
	mh=8
	
	msp = 48 --player sprite
 facing_right = true
 iswalking = false
end

function draw_player(_x,_y,_sp)
 
 mx = _x
 my = _y
 msp = _sp
 --default sprite 39 standing
	if (iswalking == false) then
	 msp = 39
	end
	--flip if not facing_right
	if (facing_right) then
   spr(msp,mx,my) else
   spr(msp,mx,my,1,1,true)
 end
	
end

function move_player()
 
  iswalking = false
  
  camera (c0,c1)
  
  if (btn(⬅️)) then 
   facing_right = false
   
   for newx=mx,mx-speed,-1 do
    if not box_hit(newx,my,mw,mh,
                   trx,try,trw,trh) then
      mx=newx
      iswalking = true
      if not moving 
    --camera to follow till edges 
      and mx>12 
      and mx<143 then
      	c0=newx-60
      end
    end               
   end
  end
  
  if (btn(➡️)) then
   facing_right = true
   
   for newx=mx,mx+speed do
    if not box_hit(newx,my,mw,mh,
                   trx,try,trw,trh) then    
      mx=newx
      iswalking = true
    --camera to follow till edges
      if not moving 
      and mx>12
      and mx<143 then
       c0=newx-60
      end
    end               
   end
  end
  
  if (btn(⬆️)) then 
   for newy=my,my-speed,-1 do
    if not box_hit(mx,newy,mw,mh,
                   trx,try,trw,trh) then
      my=newy
      iswalking = true
    end               
   end
  end 
  
  if (btn(⬇️)) then 
   for newy=my,my+speed do
    if not box_hit(mx,newy,mw,mh,
                   trx,try,trw,trh) then
      my=newy
      iswalking = true
    end               
   end
  end
  --vertical constraint for player
  if (my<60) then
  	my=60   
  end
  if (my>120) then 
  	my=120 
  end
  
  --cycle frames if walking
  if (iswalking == true) then
   if msp < 48 then msp = 48 end
   msp+=1
   if (msp >55) then
    msp = 48
   end
  end
end


-->8
--debug
function init_debugger()
	args = {}
	outlines = {}
end

--function debug(args)
-- if debug then
 
  --rect(doorx0,doory0,doorx1,doory1,11)
	--end
--end
--function toggle_debbuger(debug)
-- if debug then return true end
--end

function add_new_arg(_p,_x,_y,_c)
 add(args,{
  arg = _p,
  x=_x,
  y=_y,
  c=_c,
  draw=function(self)
   msg = self.arg
   print(msg,self.x,self.y,self.c)
  end,
  update=function(self)
   del(args,self)
  end
 })
end

function add_new_outline(_x0,_y0,_x1,_y1,_c)
 add(outlines,{
 x0=_x0,
 y0=_y0,
 x1=_x1,
 y1=_y1,
 c=_c,
 draw=function(self)
  rect(self.x0,self.y0,self.x1,self.y1,self.c)
 end,
 update=function(self)
  del(outlines,self)
 end
 })
end

-->8
--controls

function controls()
 
 --enter truck
 --in from ->move_player() 
 if (btnp(4)) 
 and moving == false
 and collider(
   doorx0,doory0,doorx1,doory1,
   mx,my) then 
   moving = true
   gear = 1
 --when entering, center camera  
   c0=cx-x1
 --or shift to 0 gear, slowing
 --down, stopping and exiting
 --back to move_player()
 elseif (btnp(4)) and moving == true and vx > 0 then
  gear=0
 end
  
 if (moving) then 
  --shift gear down with left
  if (btnp(0)) then
   gear-=1
  end
  --shift gear up with right
  if (btnp(1)) then
   gear+=1
  end
  --move vertically w up
  if (btn(2)) then 
   y0=y0-speed 
   y1=y1-speed
   
   try=y0-speed
    
   doory0=doory0-speed 
   doory1=doory1-speed
  end
  --move vertically w down
  if (btn(3)) then
    
   y0=y0+speed 
   y1=y1+speed
   
   try=y0+speed-2
   
   doory0=doory0+speed 
   doory1=doory1+speed
  end
  
  
 end
end
__gfx__
00000000005555000055550000555500005555007740000044444444444400000000000000000000000000000000000000000000000000000000000000000000
00000000065555500556555005555560055555504444000077747777777740000000000000000000000000000000000000000000000000000000000000000000
007007005567755555577555555776555557755577c6400077747155555554000000000000000000000000000000000000000000000000000000000000000000
000770005577775555777755557777555577775577cc640077747111666655400000000000000000000000000000000000000000000000000000000000000000
000770005577775555777755557777555577775577ccc40077747111111665400000000000000000000000000000000000000000000000000000000000000000
00700700555776555557755555677555555775557777740077747111111166400000000000000000000000000000000000000000000000000000000000000000
00000000055555600555555006555550055565507777740077747111111116400000000000000000000000000000000000000000000000000000000000000000
00000000005555000055550000555500005555004444400077747111111116400000000000000000000000000000000000000000000000000000000000000000
11111111111111110000000000000000000000000000000077744444444444400000000000000000000000000000000000000000000000000000000000000000
11111111111111110000000000000000000000000000000077744777777777400000000000000000000000000000000000000000000000000000000000000000
11111111111111110000000000000000000000000000000077744777777777400000000000000000000000000000000000000000000000000000000000000000
11111111777777770000000000000000000000000000000077744744777744400000000000000000000000000000000000000000000000000000000000000000
11111111111111110000000000000000000000000000000077744777777744a00000000000000000000000000000000000000000000000000000000000000000
11111111111111110000000000000000000000000000000077744777777744a00000000000000000000000000000000000000000000000000000000000000000
11111111111111110000000000000000000000000000000077744777777744a00000000000000000000000000000000000000000000000000000000000000000
11111111111111110000000000000000000000000000000044444444444444400000000000000000000000000000000000000000000000000000000000000000
44444444404000000000000009999999444444440000000000000000004444000000000000000000000000000000000000000000000000000000000000000000
455566644040000000000000fffffff9444444440000000000000000004848000000000000000000000000000000000000000000000000000000000000000000
455555644040000004444444f66666f5455555540000000000000000004444000000000000000000000000000000000000000000000000000000000000000000
455555544000004044444440f66666f5454444540000000000000000049999400000000000000000000000000000000000000000000000000000000000000000
455555544444404040504050f66666f5455555540000000000000000049999400000000000000000000000000000000000000000000000000000000000000000
455555544000404040504050f66666f5454444540000000000000000049999400000000000000000000000000000000000000000000000000000000000000000
444444444000404040504050fffffff045555554000000000000000000c0c0000000000000000000000000000000000000000000000000000000000000000000
0400004040004040400040000000000044444444000000000000000000c0c0000000000000000000000000000000000000000000000000000000000000000000
00444400004444000000000000444400004444000044440000000000004444000000000000000000000000000000000000000000000000000000000000000000
00484800004848000044440000484800004848000048480000444400004848000000000000000000000000000000000000000000000000000000000000000000
04999940004444000048480000444400049999400044440000484800004444000000000000000000000000000000000000000000000000000000000000000000
04999940049999400499994004999940049999400499994004999940049999400000000000000000000000000000000000000000000000000000000000000000
04999940049999400499994004999940049999400499994004999940049999400000000000000000000000000000000000000000000000000000000000000000
040cc040040cc04004999940040cc040040cc040040cc04004999940040cc0400000000000000000000000000000000000000000000000000000000000000000
000cc0000000c0000400c04000cc0c0000ccc000000c0c00040c0c4000cc0c000000000000000000000000000000000000000000000000000000000000000000
0000c000000c000000c00c0000000c00000c0000000c000000c000c000000c000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbbcccccccc2222222255555555444444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbbcccccccc2222222255555555444444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbbcccccccc2222222255555555444444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbbcccccccc2222222255555555444444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbbcccccccc2222222255555555444444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbbcccccccc2222222255555555444444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbbcccccccc2222222255555555444444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbbcccccccc2222222255555555444444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
c555555c000000002222222255555555444444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
c5000056000000002222222255555555444444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5555555500000000eeeeeeee55555555999999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50000005000000002222222266666666444444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5555555500000000eeeeeeee55555555999999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
caaaaaac000000002222222255555555444444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ccaaaacc00000000eeeeeeee55555555999999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc00000000eeeeeeee55555555999999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccc56cccccccceeeeeeee22222222999999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccc56666ccccceeeeeeee22222222999999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccc565566cccceeeeeeee22222222999999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccc56cc566ccceeeeeeee22222222999999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccc56ccc566cceeeeeeee22222222999999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccc56cccc566ceeeeeeee22222222999999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccc56ccccc566eeeeeeee22222222999999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccc56cccccc56eeeeeeee22222222999999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000022222222000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000022222222000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000022222222000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000055555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000022222222000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000022222222000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000022222222000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000022222222000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
4141414141414141414141414141414141414141414141414141414141414141444444444444444444444444444444444444444444444444444444444444444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414141414141414141414141415061414141444444444444444444444444444444444444444444444444444444444444444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414141414141414141414141414160414141444444444444444444444444444444444444444444444444444444444444444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414141414141414141414141414160414141444444444444444444444444444444444444444444444444444444444444444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414141414141414141414141414160414141545454545454545454545454545454545454545454545454545454545454545400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414141414141414141414141414160414141646464646464646464646464646464646464646464646464646464646464646400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414141414141414141414141414160414141646464646464646464646464646464646464646464646464646464646464646400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414141414141414141414141414160414141646464646464646464646464646464646464646464646464646464646464646400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111111111111111111111111111111111111111111111111111111111111737373737373737373737373737373737373737373737373737373737373737300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000121212121200000000000000000000000000
1010101010101010101010101010101010101010101010101010101010101010636363636363636363636363636363636363636363636363636363636363636300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1110101011111111111110101010111111111110101011111111111010111111736363637373737373736363636373737373736363637373737373636373737300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101010101010101010101010101010101010636363636363636363636363636363636363636363636363636363636363636300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111101010111111111111111010101111111111111010101111111110101111737363636373737373737373636363737373737373636363737373736363737300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101010101010101010101010101010101010636363636363636363636363636363636363636363636363636363636363636300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101010101010101010101010101010101010636363636363636363636363636363636363636363636363636363636363636300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101010101010101010101010101010101010636363636363636363636363636363636363636363636363636363636363636300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4242424242424242424242424242424242424242424242424242424242424242000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4242424242424242424242424242424242424242424242424242424242424242000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4242424242424242424242424242424242424242424242424242424242424242000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4242424242424242424242424242424242424242424242424242424242424242000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5252525252525252525252525252525252525252525252525252525252525252000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6262626262626262626262626262626262626262626262626262626262626262000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6262626262626262626262626262626262626262626262626262626262626262000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6262626262626262626262626262626262626262626262626262626262626262000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5353535353535353535353535353535353535353535353535353535353535353000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4343434343434343434343434343434343434343434343434343434343434343000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5343434353535353535343434343535353535343434353535353534343535353000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4343434343434343434343434343434343434343434343434343434343434343000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5353434343535353535353534343435353535353534343435353535343435353000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4343434343434343434343434343434343434343434343434343434343434343000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4343434343434343434343434343434343434343434343434343434343434343000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4343434343434343434343434343434343434343434343434343434343434343000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000800000201002010020100201002010020100201002010020100201002010020100201003010030100301003010020100201002010020100201002010030100301003010030100301003010030100301003010
001000000201002010020100201002010020100201002010020100101001010010100101001010010100101001010010100101001010010100101001010010100101001010020100201002010020100101001010
__music__
00 01424344

